from typing import Any, Optional

class InvalidConfError(Exception): ...
class InvalidInetdConfError(InvalidConfError): ...
class InvalidServicesConfError(InvalidConfError): ...
class UnknownService(Exception): ...

class SimpleConfFile:
    commentChar: str = ...
    defaultFilename: Any = ...
    def parseFile(self, file: Optional[Any] = ...) -> None: ...
    def parseLine(self, line: Any) -> None: ...
    def parseFields(self, *fields: Any) -> None: ...

class InetdService:
    name: Any = ...
    port: Any = ...
    socketType: Any = ...
    protocol: Any = ...
    wait: Any = ...
    user: Any = ...
    group: Any = ...
    program: Any = ...
    programArgs: Any = ...
    def __init__(self, name: Any, port: Any, socketType: Any, protocol: Any, wait: Any, user: Any, group: Any, program: Any, programArgs: Any) -> None: ...

class InetdConf(SimpleConfFile):
    defaultFilename: str = ...
    services: Any = ...
    knownServices: Any = ...
    def __init__(self, knownServices: Optional[Any] = ...) -> None: ...
    def parseFields(self, serviceName: Any, socketType: Any, protocol: Any, wait: Any, user: Any, program: Any, *programArgs: Any) -> None: ...

class ServicesConf(SimpleConfFile):
    defaultFilename: str = ...
    services: Any = ...
    def __init__(self) -> None: ...
    def parseFields(self, name: Any, portAndProtocol: Any, *aliases: Any) -> None: ...
