from twisted.internet.interfaces import IPushProducer as IPushProducer
from twisted.internet.task import cooperate as cooperate
from twisted.python import log as log
from twisted.python.reflect import safe_str as safe_str
from typing import Any

class _PullToPush:
    def __init__(self, pullProducer: Any, consumer: Any) -> None: ...
    def startStreaming(self) -> None: ...
    def stopStreaming(self) -> None: ...
    def pauseProducing(self) -> None: ...
    def resumeProducing(self) -> None: ...
    def stopProducing(self) -> None: ...
