from twisted.internet import abstract as abstract, fdesc as fdesc
from twisted.internet.serialport import BaseSerialPort as BaseSerialPort
from typing import Any

class SerialPort(BaseSerialPort, abstract.FileDescriptor):
    connected: int = ...
    reactor: Any = ...
    protocol: Any = ...
    def __init__(self, protocol: Any, deviceNameOrPortNumber: Any, reactor: Any, baudrate: int = ..., bytesize: Any = ..., parity: Any = ..., stopbits: Any = ..., timeout: int = ..., xonxoff: int = ..., rtscts: int = ...) -> None: ...
    def fileno(self): ...
    def writeSomeData(self, data: Any): ...
    def doRead(self): ...
    def connectionLost(self, reason: Any) -> None: ...
