from twisted.internet import posixbase
from typing import Any

class Win32Reactor(posixbase.PosixReactorBase):
    dummyEvent: Any = ...
    def __init__(self) -> None: ...
    def addEvent(self, event: Any, fd: Any, action: Any) -> None: ...
    def removeEvent(self, event: Any) -> None: ...
    def addReader(self, reader: Any) -> None: ...
    def addWriter(self, writer: Any) -> None: ...
    def removeReader(self, reader: Any) -> None: ...
    def removeWriter(self, writer: Any) -> None: ...
    def removeAll(self): ...
    def getReaders(self): ...
    def getWriters(self): ...
    def doWaitForMultipleEvents(self, timeout: Any) -> None: ...
    doIteration: Any = ...

class _ThreadFDWrapper:
    def __init__(self, reactor: Any, fd: Any, action: Any, logPrefix: Any) -> None: ...
    def logPrefix(self): ...
    def connectionLost(self, reason: Any) -> None: ...

class _ThreadedWin32EventsMixin:
    def addEvent(self, event: Any, fd: Any, action: Any) -> None: ...
    def removeEvent(self, event: Any) -> None: ...

def install() -> None: ...
