from twisted.conch import error as error
from twisted.conch.ssh import connection as connection, transport as transport, userauth as userauth
from twisted.internet import protocol as protocol
from twisted.python import log as log
from typing import Any

class SSHFactory(protocol.Factory):
    protocol: Any = ...
    services: Any = ...
    publicKeys: Any = ...
    privateKeys: Any = ...
    primes: Any = ...
    def startFactory(self) -> None: ...
    def buildProtocol(self, addr: Any): ...
    def getPublicKeys(self) -> None: ...
    def getPrivateKeys(self) -> None: ...
    def getPrimes(self) -> None: ...
    def getDHPrime(self, bits: Any): ...
    def getService(self, transport: Any, service: Any): ...
