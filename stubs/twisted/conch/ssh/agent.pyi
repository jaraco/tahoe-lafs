from twisted.conch.error import ConchError as ConchError, MissingKeyStoreError as MissingKeyStoreError
from twisted.conch.ssh import keys as keys
from twisted.conch.ssh.common import NS as NS, getMP as getMP, getNS as getNS
from twisted.internet import defer as defer, protocol as protocol
from typing import Any

class SSHAgentClient(protocol.Protocol):
    buf: bytes = ...
    deferreds: Any = ...
    def __init__(self) -> None: ...
    def dataReceived(self, data: Any) -> None: ...
    def sendRequest(self, reqType: Any, data: Any): ...
    def requestIdentities(self): ...
    def addIdentity(self, blob: Any, comment: bytes = ...): ...
    def signData(self, blob: Any, data: Any): ...
    def removeIdentity(self, blob: Any): ...
    def removeAllIdentities(self): ...

class SSHAgentServer(protocol.Protocol):
    buf: bytes = ...
    def __init__(self) -> None: ...
    def dataReceived(self, data: Any) -> None: ...
    def sendResponse(self, reqType: Any, data: Any) -> None: ...
    def agentc_REQUEST_IDENTITIES(self, data: Any) -> None: ...
    def agentc_SIGN_REQUEST(self, data: Any): ...
    def agentc_ADD_IDENTITY(self, data: Any) -> None: ...
    def agentc_REMOVE_IDENTITY(self, data: Any) -> None: ...
    def agentc_REMOVE_ALL_IDENTITIES(self, data: Any) -> None: ...
    def agentc_REQUEST_RSA_IDENTITIES(self, data: Any) -> None: ...
    def agentc_REMOVE_RSA_IDENTITY(self, data: Any) -> None: ...
    def agentc_REMOVE_ALL_RSA_IDENTITIES(self, data: Any) -> None: ...

AGENTC_REQUEST_RSA_IDENTITIES: int
AGENT_RSA_IDENTITIES_ANSWER: int
AGENT_FAILURE: int
AGENT_SUCCESS: int
AGENTC_REMOVE_RSA_IDENTITY: int
AGENTC_REMOVE_ALL_RSA_IDENTITIES: int
AGENTC_REQUEST_IDENTITIES: int
AGENT_IDENTITIES_ANSWER: int
AGENTC_SIGN_REQUEST: int
AGENT_SIGN_RESPONSE: int
AGENTC_ADD_IDENTITY: int
AGENTC_REMOVE_IDENTITY: int
AGENTC_REMOVE_ALL_IDENTITIES: int
messages: Any
