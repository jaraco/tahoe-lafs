from twisted.conch.client import agent as agent
from twisted.conch.client.knownhosts import ConsoleUI as ConsoleUI, KnownHostsFile as KnownHostsFile
from twisted.conch.error import ConchError as ConchError
from twisted.conch.ssh import common as common, keys as keys, userauth as userauth
from twisted.internet import defer as defer, protocol as protocol, reactor as reactor
from twisted.python import log as log
from twisted.python.compat import nativeString as nativeString, raw_input as raw_input
from twisted.python.filepath import FilePath as FilePath
from typing import Any, Optional

def verifyHostKey(transport: Any, host: Any, pubKey: Any, fingerprint: Any): ...
def isInKnownHosts(host: Any, pubKey: Any, options: Any): ...
def getHostKeyAlgorithms(host: Any, options: Any): ...

class SSHUserAuthClient(userauth.SSHUserAuthClient):
    keyAgent: Any = ...
    options: Any = ...
    usedFiles: Any = ...
    def __init__(self, user: Any, options: Any, *args: Any) -> None: ...
    def serviceStarted(self) -> None: ...
    def serviceStopped(self) -> None: ...
    def getPassword(self, prompt: Optional[Any] = ...): ...
    def getPublicKey(self): ...
    def signData(self, publicKey: Any, signData: Any): ...
    def getPrivateKey(self): ...
    def getGenericAnswers(self, name: Any, instruction: Any, prompts: Any): ...
