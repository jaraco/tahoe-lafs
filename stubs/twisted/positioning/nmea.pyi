from constantly import Values
from twisted.positioning import _sentence
from twisted.protocols.basic import LineReceiver
from typing import Any, Optional

class GPGGAFixQualities(Values):
    INVALID_FIX: str = ...
    GPS_FIX: str = ...
    DGPS_FIX: str = ...
    PPS_FIX: str = ...
    RTK_FIX: str = ...
    FLOAT_RTK_FIX: str = ...
    DEAD_RECKONING: str = ...
    MANUAL: str = ...
    SIMULATED: str = ...

class GPGLLGPRMCFixQualities(Values):
    ACTIVE: Any = ...
    VOID: Any = ...

class GPGSAFixTypes(Values):
    GSA_NO_FIX: Any = ...
    GSA_2D_FIX: Any = ...
    GSA_3D_FIX: Any = ...

class NMEAProtocol(LineReceiver, _sentence._PositioningSentenceProducerMixin):
    def __init__(self, receiver: Any, sentenceCallback: Optional[Any] = ...) -> None: ...
    def lineReceived(self, rawSentence: Any) -> None: ...

class NMEASentence(_sentence._BaseSentence):
    ALLOWED_ATTRIBUTES: Any = ...

class NMEAAdapter:
    def __init__(self, receiver: Any) -> None: ...
    yearThreshold: int = ...
    def clear(self) -> None: ...
    currentSentence: Any = ...
    def sentenceReceived(self, sentence: Any) -> None: ...
