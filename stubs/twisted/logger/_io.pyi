from ._levels import LogLevel as LogLevel
from ._logger import Logger as Logger
from constantly import NamedConstant as NamedConstant
from incremental import Version as Version
from twisted.python.deprecate import deprecatedProperty as deprecatedProperty
from typing import Any, AnyStr, Iterable, Optional

class LoggingFile:
    @softspace.setter
    def softspace(self, value: Any) -> None: ...
    level: Any = ...
    log: Any = ...
    def __init__(self, logger: Logger, level: NamedConstant=..., encoding: Optional[str]=...) -> None: ...
    @property
    def closed(self) -> bool: ...
    @property
    def encoding(self) -> str: ...
    @property
    def mode(self) -> str: ...
    @property
    def newlines(self) -> None: ...
    @property
    def name(self) -> str: ...
    def close(self) -> None: ...
    def flush(self) -> None: ...
    def fileno(self) -> int: ...
    def isatty(self) -> bool: ...
    def write(self, message: AnyStr) -> None: ...
    def writelines(self, lines: Iterable[AnyStr]) -> None: ...
    read: Any = ...
    next: Any = ...
    readline: Any = ...
    readlines: Any = ...
    xreadlines: Any = ...
    seek: Any = ...
    tell: Any = ...
    truncate: Any = ...
