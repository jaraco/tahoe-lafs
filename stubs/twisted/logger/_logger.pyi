from ._levels import InvalidLogLevelError as InvalidLogLevelError, LogLevel as LogLevel
from twisted.python.compat import currentframe as currentframe
from twisted.python.failure import Failure as Failure
from typing import Any, Optional

class Logger:
    namespace: Any = ...
    source: Any = ...
    observer: Any = ...
    def __init__(self, namespace: Optional[Any] = ..., source: Optional[Any] = ..., observer: Optional[Any] = ...) -> None: ...
    def __get__(self, oself: Any, type: Optional[Any] = ...): ...
    def emit(self, level: Any, format: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def failure(self, format: Any, failure: Optional[Any] = ..., level: Any = ..., **kwargs: Any) -> None: ...
    def debug(self, format: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def info(self, format: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def warn(self, format: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def error(self, format: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def critical(self, format: Optional[Any] = ..., **kwargs: Any) -> None: ...
