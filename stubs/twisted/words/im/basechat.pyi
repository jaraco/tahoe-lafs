from twisted.words.im.locals import AWAY as AWAY, OFFLINE as OFFLINE, ONLINE as ONLINE
from typing import Any, Optional

class ContactsList:
    chatui: Any = ...
    contacts: Any = ...
    onlineContacts: Any = ...
    clients: Any = ...
    def __init__(self, chatui: Any) -> None: ...
    def setContactStatus(self, person: Any) -> None: ...
    def registerAccountClient(self, client: Any) -> None: ...
    def unregisterAccountClient(self, client: Any) -> None: ...
    def contactChangedNick(self, person: Any, newnick: Any) -> None: ...

class Conversation:
    chatui: Any = ...
    person: Any = ...
    def __init__(self, person: Any, chatui: Any) -> None: ...
    def show(self) -> None: ...
    def hide(self) -> None: ...
    def sendText(self, text: Any) -> None: ...
    def showMessage(self, text: Any, metadata: Optional[Any] = ...) -> None: ...
    def contactChangedNick(self, person: Any, newnick: Any) -> None: ...

class GroupConversation:
    chatui: Any = ...
    group: Any = ...
    members: Any = ...
    def __init__(self, group: Any, chatui: Any) -> None: ...
    def show(self) -> None: ...
    def hide(self) -> None: ...
    def sendText(self, text: Any) -> None: ...
    def showGroupMessage(self, sender: Any, text: Any, metadata: Optional[Any] = ...) -> None: ...
    def setGroupMembers(self, members: Any) -> None: ...
    def setTopic(self, topic: Any, author: Any) -> None: ...
    def memberJoined(self, member: Any) -> None: ...
    def memberChangedNick(self, oldnick: Any, newnick: Any) -> None: ...
    def memberLeft(self, member: Any) -> None: ...

class ChatUI:
    conversations: Any = ...
    groupConversations: Any = ...
    persons: Any = ...
    groups: Any = ...
    onlineClients: Any = ...
    contactsList: Any = ...
    def __init__(self) -> None: ...
    def registerAccountClient(self, client: Any): ...
    def unregisterAccountClient(self, client: Any) -> None: ...
    def getContactsList(self): ...
    def getConversation(self, person: Any, Class: Any = ..., stayHidden: bool = ...): ...
    def getGroupConversation(self, group: Any, Class: Any = ..., stayHidden: bool = ...): ...
    def getPerson(self, name: Any, client: Any): ...
    def getGroup(self, name: Any, client: Any): ...
    def contactChangedNick(self, person: Any, newnick: Any) -> None: ...
