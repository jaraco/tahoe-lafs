from twisted.internet import defer as defer
from twisted.python.compat import unicode as unicode
from twisted.words.protocols.jabber import sasl_mechanisms as sasl_mechanisms, xmlstream as xmlstream
from twisted.words.xish import domish as domish
from typing import Any, Optional

NS_XMPP_SASL: str

def get_mechanisms(xs: Any): ...

class SASLError(Exception): ...
class SASLNoAcceptableMechanism(SASLError): ...

class SASLAuthError(SASLError):
    condition: Any = ...
    def __init__(self, condition: Optional[Any] = ...) -> None: ...

class SASLIncorrectEncodingError(SASLError): ...

base64Pattern: Any

def fromBase64(s: Any): ...

class SASLInitiatingInitializer(xmlstream.BaseFeatureInitiatingInitializer):
    feature: Any = ...
    mechanism: Any = ...
    def setMechanism(self) -> None: ...
    def start(self): ...
    def sendAuth(self, data: Optional[Any] = ...) -> None: ...
    def sendResponse(self, data: bytes = ...) -> None: ...
    def onChallenge(self, element: Any) -> None: ...
    def onSuccess(self, success: Any) -> None: ...
    def onFailure(self, failure: Any) -> None: ...
