from typing import Any, Optional
from zope.interface import Interface

class IProtocolPlugin(Interface):
    name: Any = ...
    def getFactory(realm: Any, portal: Any) -> None: ...

class IGroup(Interface):
    name: Any = ...
    def add(user: Any) -> None: ...
    def remove(user: Any, reason: Optional[Any] = ...) -> None: ...
    def size() -> None: ...
    def receive(sender: Any, recipient: Any, message: Any) -> None: ...
    def setMetadata(meta: Any) -> None: ...
    def iterusers() -> None: ...

class IChatClient(Interface):
    name: Any = ...
    def receive(sender: Any, recipient: Any, message: Any) -> None: ...
    def groupMetaUpdate(group: Any, meta: Any) -> None: ...
    def userJoined(group: Any, user: Any) -> None: ...
    def userLeft(group: Any, user: Any, reason: Optional[Any] = ...) -> None: ...

class IUser(Interface):
    realm: Any = ...
    mind: Any = ...
    name: Any = ...
    lastMessage: Any = ...
    signOn: Any = ...
    def loggedIn(realm: Any, mind: Any) -> None: ...
    def send(recipient: Any, message: Any) -> None: ...
    def join(group: Any) -> None: ...
    def leave(group: Any) -> None: ...
    def itergroups() -> None: ...

class IChatService(Interface):
    name: Any = ...
    createGroupOnRequest: Any = ...
    createUserOnRequest: Any = ...
    def itergroups() -> None: ...
    def getGroup(name: Any) -> None: ...
    def createGroup(name: Any) -> None: ...
    def lookupGroup(name: Any) -> None: ...
    def getUser(name: Any) -> None: ...
    def createUser(name: Any) -> None: ...
