from twisted.logger import Logger as Logger
from twisted.python.filepath import FilePath as FilePath
from types import TracebackType
from typing import Any, Optional, Type
from zope.interface import Interface

class IPIDFile(Interface):
    def read() -> int: ...
    def writeRunningPID() -> None: ...
    def remove() -> None: ...
    def isRunning() -> bool: ...
    def __enter__() -> IPIDFile: ...
    def __exit__(excType: Optional[Type[BaseException]], excValue: Optional[BaseException], traceback: Optional[TracebackType]) -> Optional[bool]: ...

class PIDFile:
    filePath: Any = ...
    def __init__(self, filePath: FilePath) -> None: ...
    def read(self) -> int: ...
    def writeRunningPID(self) -> None: ...
    def remove(self) -> None: ...
    def isRunning(self) -> bool: ...
    def __enter__(self) -> PIDFile: ...
    def __exit__(self, excType: Optional[Type[BaseException]], excValue: Optional[BaseException], traceback: Optional[TracebackType]) -> None: ...

class NonePIDFile:
    def __init__(self) -> None: ...
    def read(self) -> int: ...
    def writeRunningPID(self) -> None: ...
    def remove(self) -> None: ...
    def isRunning(self) -> bool: ...
    def __enter__(self) -> NonePIDFile: ...
    def __exit__(self, excType: Optional[Type[BaseException]], excValue: Optional[BaseException], traceback: Optional[TracebackType]) -> None: ...

nonePIDFile: Any

class AlreadyRunningError(Exception): ...
class InvalidPIDFileError(Exception): ...
class StalePIDFileError(Exception): ...
class NoPIDFound(Exception): ...
