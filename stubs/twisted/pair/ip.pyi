from twisted.internet import protocol as protocol
from twisted.pair import raw as raw
from typing import Any

class IPHeader:
    saddr: Any = ...
    daddr: Any = ...
    version: Any = ...
    ihl: Any = ...
    fragment_offset: Any = ...
    dont_fragment: Any = ...
    more_fragments: Any = ...
    def __init__(self, data: Any) -> None: ...

MAX_SIZE: Any

class IPProtocol(protocol.AbstractDatagramProtocol):
    ipProtos: Any = ...
    def __init__(self) -> None: ...
    def addProto(self, num: Any, proto: Any) -> None: ...
    def datagramReceived(self, data: Any, partial: Any, dest: Any, source: Any, protocol: Any) -> None: ...
