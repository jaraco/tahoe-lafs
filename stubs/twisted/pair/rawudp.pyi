from twisted.internet import protocol as protocol
from twisted.pair import raw as raw
from typing import Any

class UDPHeader:
    def __init__(self, data: Any) -> None: ...

class RawUDPProtocol(protocol.AbstractDatagramProtocol):
    udpProtos: Any = ...
    def __init__(self) -> None: ...
    def addProto(self, num: Any, proto: Any) -> None: ...
    def datagramReceived(self, data: Any, partial: Any, source: Any, dest: Any, protocol: Any, version: Any, ihl: Any, tos: Any, tot_len: Any, fragment_id: Any, fragment_offset: Any, dont_fragment: Any, more_fragments: Any, ttl: Any) -> None: ...
