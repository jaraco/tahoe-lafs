from collections import UserDict
from twisted.internet import defer as defer, protocol as protocol
from twisted.protocols import basic as basic, policies as policies
from twisted.python import log as log
from typing import Any, Optional

def quote(s: Any): ...
def unquote(s: Any): ...

class PostfixTCPMapServer(basic.LineReceiver, policies.TimeoutMixin):
    timeout: int = ...
    delimiter: bytes = ...
    def connectionMade(self) -> None: ...
    def sendCode(self, code: Any, message: bytes = ...) -> None: ...
    def lineReceived(self, line: Any) -> None: ...
    def do_get(self, key: Any) -> None: ...
    def do_put(self, keyAndValue: Any) -> None: ...

class PostfixTCPMapDictServerFactory(UserDict, protocol.ServerFactory):
    protocol: Any = ...

class PostfixTCPMapDeferringDictServerFactory(protocol.ServerFactory):
    protocol: Any = ...
    data: Any = ...
    def __init__(self, data: Optional[Any] = ...) -> None: ...
    def get(self, key: Any): ...
