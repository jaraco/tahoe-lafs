from ._exceptions import InvalidNetworkProtocol as InvalidNetworkProtocol, InvalidProxyHeader as InvalidProxyHeader, MissingAddressData as MissingAddressData, convertError as convertError
from twisted.internet import address as address
from typing import Any

class V1Parser:
    PROXYSTR: bytes = ...
    UNKNOWN_PROTO: bytes = ...
    TCP4_PROTO: bytes = ...
    TCP6_PROTO: bytes = ...
    ALLOWED_NET_PROTOS: Any = ...
    NEWLINE: bytes = ...
    buffer: bytes = ...
    def __init__(self) -> None: ...
    def feed(self, data: Any): ...
    @classmethod
    def parse(cls, line: Any): ...
