from ._exceptions import InvalidNetworkProtocol as InvalidNetworkProtocol, InvalidProxyHeader as InvalidProxyHeader, MissingAddressData as MissingAddressData, convertError as convertError
from constantly import Values
from twisted.internet import address as address
from twisted.python import compat as compat
from typing import Any

class NetFamily(Values):
    UNSPEC: Any = ...
    INET: Any = ...
    INET6: Any = ...
    UNIX: Any = ...

class NetProtocol(Values):
    UNSPEC: Any = ...
    STREAM: Any = ...
    DGRAM: Any = ...

class V2Parser:
    PREFIX: bytes = ...
    VERSIONS: Any = ...
    COMMANDS: Any = ...
    ADDRESSFORMATS: Any = ...
    buffer: bytes = ...
    def __init__(self) -> None: ...
    def feed(self, data: Any): ...
    @classmethod
    def parse(cls, line: Any): ...
