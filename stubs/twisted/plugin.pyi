from typing import Any, Optional
from zope.interface import Interface

class IPlugin(Interface): ...

class CachedPlugin:
    dropin: Any = ...
    name: Any = ...
    description: Any = ...
    provided: Any = ...
    def __init__(self, dropin: Any, name: Any, description: Any, provided: Any) -> None: ...
    def load(self): ...
    def __conform__(self, interface: Any, registry: Optional[Any] = ..., default: Optional[Any] = ...): ...
    getComponent: Any = ...

class CachedDropin:
    moduleName: Any = ...
    description: Any = ...
    plugins: Any = ...
    def __init__(self, moduleName: Any, description: Any) -> None: ...

def getPlugins(interface: Any, package: Optional[Any] = ...) -> None: ...
getPlugIns = getPlugins

def pluginPackagePaths(name: Any): ...
