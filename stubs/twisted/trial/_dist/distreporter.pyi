from twisted.python.components import proxyForInterface as proxyForInterface
from twisted.trial.itrial import IReporter as IReporter
from typing import Any, Optional

class DistReporter:
    running: Any = ...
    def __init__(self, original: Any) -> None: ...
    def startTest(self, test: Any) -> None: ...
    def addFailure(self, test: Any, fail: Any) -> None: ...
    def addError(self, test: Any, error: Any) -> None: ...
    def addSkip(self, test: Any, reason: Any) -> None: ...
    def addUnexpectedSuccess(self, test: Any, todo: Optional[Any] = ...) -> None: ...
    def addExpectedFailure(self, test: Any, error: Any, todo: Optional[Any] = ...) -> None: ...
    def addSuccess(self, test: Any) -> None: ...
    def stopTest(self, test: Any) -> None: ...
