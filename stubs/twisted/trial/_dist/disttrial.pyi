from twisted.internet.defer import DeferredList as DeferredList
from twisted.internet.task import cooperate as cooperate
from twisted.python.filepath import FilePath as FilePath
from twisted.python.modules import theSystemPath as theSystemPath
from twisted.trial._dist.distreporter import DistReporter as DistReporter
from twisted.trial._dist.worker import LocalWorker as LocalWorker, LocalWorkerAMP as LocalWorkerAMP
from twisted.trial.reporter import UncleanWarningsReporterWrapper as UncleanWarningsReporterWrapper
from typing import Any, Optional

class DistTrialRunner:
    def __init__(self, reporterFactory: Any, workerNumber: Any, workerArguments: Any, stream: Optional[Any] = ..., tracebackFormat: str = ..., realTimeErrors: bool = ..., uncleanWarnings: bool = ..., logfile: str = ..., workingDirectory: str = ...) -> None: ...
    def writeResults(self, result: Any) -> None: ...
    def createLocalWorkers(self, protocols: Any, workingDirectory: Any): ...
    def launchWorkerProcesses(self, spawner: Any, protocols: Any, arguments: Any) -> None: ...
    def run(self, suite: Any, reactor: Optional[Any] = ..., cooperate: Any = ..., untilFailure: bool = ...): ...
    def runUntilFailure(self, suite: Any): ...
