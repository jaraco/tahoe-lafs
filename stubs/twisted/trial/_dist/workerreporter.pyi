from twisted.python.failure import Failure as Failure
from twisted.python.reflect import qual as qual
from twisted.trial._dist import managercommands as managercommands
from twisted.trial.reporter import TestResult as TestResult
from typing import Any, Optional

class WorkerReporter(TestResult):
    ampProtocol: Any = ...
    def __init__(self, ampProtocol: Any) -> None: ...
    def addSuccess(self, test: Any) -> None: ...
    def addError(self, test: Any, error: Any) -> None: ...
    def addFailure(self, test: Any, fail: Any) -> None: ...
    def addSkip(self, test: Any, reason: Any) -> None: ...
    def addExpectedFailure(self, test: Any, error: Any, todo: Optional[Any] = ...) -> None: ...
    def addUnexpectedSuccess(self, test: Any, todo: Optional[Any] = ...) -> None: ...
    def printSummary(self) -> None: ...
