import types
from twisted.python import log as log, reflect as reflect
from typing import Any, Dict

oldModules: Dict[str, types.ModuleType]

def pickleMethod(method: Any): ...
def unpickleMethod(im_name: Any, im_self: Any, im_class: Any): ...
def pickleModule(module: Any): ...
def unpickleModule(name: Any): ...
def pickleStringO(stringo: Any): ...
def unpickleStringO(val: Any, sek: Any): ...
def pickleStringI(stringi: Any): ...
def unpickleStringI(val: Any, sek: Any): ...

class Ephemeral:
    def __reduce__(self): ...

versionedsToUpgrade: Dict[int, Versioned]
upgraded: Any

def doUpgrade() -> None: ...
def requireUpgrade(obj: Any): ...

class Versioned:
    persistenceVersion: int = ...
    persistenceForgets: Any = ...
    def versionUpgrade(self) -> None: ...
