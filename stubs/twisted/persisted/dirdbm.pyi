from typing import Any, Optional

class DirDBM:
    dname: Any = ...
    def __init__(self, name: Any) -> None: ...
    def __len__(self): ...
    def __setitem__(self, k: Any, v: Any) -> None: ...
    def __getitem__(self, k: Any): ...
    def __delitem__(self, k: Any) -> None: ...
    def keys(self): ...
    def values(self): ...
    def items(self): ...
    def has_key(self, key: Any): ...
    def setdefault(self, key: Any, value: Any): ...
    def get(self, key: Any, default: Optional[Any] = ...): ...
    def __contains__(self, key: Any): ...
    def update(self, dict: Any) -> None: ...
    def copyTo(self, path: Any): ...
    def clear(self) -> None: ...
    def close(self) -> None: ...
    def getModificationTime(self, key: Any): ...

class Shelf(DirDBM):
    def __setitem__(self, k: Any, v: Any) -> None: ...
    def __getitem__(self, k: Any): ...

def open(file: Any, flag: Optional[Any] = ..., mode: Optional[Any] = ...): ...
