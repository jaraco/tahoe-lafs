from typing import Any, Optional

class _ErrorStream:
    def write(self, data: Any) -> None: ...
    def writelines(self, iovec: Any) -> None: ...
    def flush(self) -> None: ...

class _InputStream:
    def __init__(self, input: Any) -> None: ...
    def read(self, size: Optional[Any] = ...): ...
    def readline(self, size: Optional[Any] = ...): ...
    def readlines(self, size: Optional[Any] = ...): ...
    def __iter__(self) -> Any: ...

class _WSGIResponse:
    started: bool = ...
    reactor: Any = ...
    threadpool: Any = ...
    application: Any = ...
    request: Any = ...
    environ: Any = ...
    def __init__(self, reactor: Any, threadpool: Any, application: Any, request: Any) -> None: ...
    status: Any = ...
    headers: Any = ...
    def startResponse(self, status: Any, headers: Any, excInfo: Optional[Any] = ...): ...
    def write(self, data: Any): ...
    def start(self) -> None: ...
    def run(self) -> None: ...

class WSGIResource:
    isLeaf: bool = ...
    def __init__(self, reactor: Any, threadpool: Any, application: Any) -> None: ...
    def render(self, request: Any): ...
    def getChildWithDefault(self, name: Any, request: Any) -> None: ...
    def putChild(self, path: Any, child: Any) -> None: ...
