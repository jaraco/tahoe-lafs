from twisted.cred import error as error
from twisted.cred.credentials import Anonymous as Anonymous
from twisted.logger import Logger as Logger
from twisted.python.compat import unicode as unicode
from twisted.python.components import proxyForInterface as proxyForInterface
from twisted.web import util as util
from twisted.web.resource import ErrorPage as ErrorPage, IResource as IResource
from typing import Any

class UnauthorizedResource:
    isLeaf: bool = ...
    def __init__(self, factories: Any) -> None: ...
    def render(self, request: Any): ...
    def getChildWithDefault(self, path: Any, request: Any): ...

class HTTPAuthSessionWrapper:
    isLeaf: bool = ...
    def __init__(self, portal: Any, credentialFactories: Any) -> None: ...
    def render(self, request: Any): ...
    def getChildWithDefault(self, path: Any, request: Any): ...
