from typing import Any, Optional

class Error(Exception):
    status: Any = ...
    message: Any = ...
    response: Any = ...
    def __init__(self, code: Any, message: Optional[Any] = ..., response: Optional[Any] = ...) -> None: ...

class PageRedirect(Error):
    message: Any = ...
    location: Any = ...
    def __init__(self, code: Any, message: Optional[Any] = ..., response: Optional[Any] = ..., location: Optional[Any] = ...) -> None: ...

class InfiniteRedirection(Error):
    message: Any = ...
    location: Any = ...
    def __init__(self, code: Any, message: Optional[Any] = ..., response: Optional[Any] = ..., location: Optional[Any] = ...) -> None: ...

class RedirectWithNoLocation(Error):
    message: Any = ...
    uri: Any = ...
    def __init__(self, code: Any, message: Any, uri: Any) -> None: ...

class UnsupportedMethod(Exception):
    allowedMethods: Any = ...
    def __init__(self, allowedMethods: Any, *args: Any) -> None: ...

class SchemeNotSupported(Exception): ...
class RenderError(Exception): ...

class MissingRenderMethod(RenderError):
    element: Any = ...
    renderName: Any = ...
    def __init__(self, element: Any, renderName: Any) -> None: ...

class MissingTemplateLoader(RenderError):
    element: Any = ...
    def __init__(self, element: Any) -> None: ...

class UnexposedMethodError(Exception): ...
class UnfilledSlot(Exception): ...
class UnsupportedType(Exception): ...
class ExcessiveBufferingError(Exception): ...

class FlattenerError(Exception):
    def __init__(self, exception: Any, roots: Any, traceback: Any) -> None: ...

class UnsupportedSpecialHeader(Exception): ...
