from twisted.application import internet as internet
from twisted.cred import checkers as checkers, strcred as strcred
from twisted.internet import endpoints as endpoints
from twisted.mail import alias as alias, mail as mail, maildir as maildir, relay as relay, relaymanager as relaymanager
from twisted.python import usage as usage
from typing import Any

class Options(usage.Options, strcred.AuthOptionMixin):
    synopsis: str = ...
    optParameters: Any = ...
    optFlags: Any = ...
    compData: Any = ...
    longdesc: str = ...
    service: Any = ...
    last_domain: Any = ...
    def __init__(self) -> None: ...
    def addEndpoint(self, service: Any, description: Any) -> None: ...
    def opt_pop3(self, description: Any) -> None: ...
    opt_p: Any = ...
    def opt_smtp(self, description: Any) -> None: ...
    opt_s: Any = ...
    def opt_default(self) -> None: ...
    opt_D: Any = ...
    def opt_maildirdbmdomain(self, domain: Any) -> None: ...
    opt_d: Any = ...
    def opt_user(self, user_pass: Any) -> None: ...
    opt_u: Any = ...
    def opt_bounce_to_postmaster(self) -> None: ...
    opt_b: Any = ...
    def opt_aliases(self, filename: Any) -> None: ...
    opt_A: Any = ...
    def postOptions(self) -> None: ...

class AliasUpdater:
    domains: Any = ...
    domain: Any = ...
    def __init__(self, domains: Any, domain: Any) -> None: ...
    def __call__(self, new: Any) -> None: ...

def makeService(config: Any): ...
