from typing import Any, Optional

defaultContextDict: Any
setDefault: Any

class ContextTracker:
    contexts: Any = ...
    def __init__(self) -> None: ...
    def callWithContext(self, newContext: Any, func: Any, *args: Any, **kw: Any): ...
    def getContext(self, key: Any, default: Optional[Any] = ...): ...

class ThreadedContextTracker:
    storage: Any = ...
    def __init__(self) -> None: ...
    def currentContext(self): ...
    def callWithContext(self, ctx: Any, func: Any, *args: Any, **kw: Any): ...
    def getContext(self, key: Any, default: Optional[Any] = ...): ...

def installContextTracker(ctr: Any) -> None: ...
