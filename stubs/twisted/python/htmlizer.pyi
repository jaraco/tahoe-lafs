from . import reflect as reflect
from twisted.python.compat import escape as escape
from typing import Any, Optional

class TokenPrinter:
    currentCol: Any = ...
    currentLine: Any = ...
    lastIdentifier: int = ...
    parameters: int = ...
    encoding: str = ...
    writer: Any = ...
    def __init__(self, writer: Any) -> None: ...
    def printtoken(self, type: Any, token: Any, sCoordinates: Any, eCoordinates: Any, line: Any) -> None: ...

class HTMLWriter:
    noSpan: Any = ...
    writer: Any = ...
    def __init__(self, writer: Any) -> None: ...
    def write(self, token: Any, type: Optional[Any] = ...) -> None: ...

class SmallerHTMLWriter(HTMLWriter):
    noSpan: Any = ...

def filter(inp: Any, out: Any, writer: Any = ...) -> None: ...
def main() -> None: ...
