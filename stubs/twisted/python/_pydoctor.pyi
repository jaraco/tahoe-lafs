from pydoctor import zopeinterface
from pydoctor.sphinx import SphinxInventory
from typing import Any, Optional

class TwistedSphinxInventory(SphinxInventory):
    def getLink(self, name: Any): ...

def getDeprecated(self, decorators: Any) -> None: ...

class TwistedModuleVisitor(zopeinterface.ZopeInterfaceModuleVisitor):
    def visit_ClassDef(self, node: Any) -> None: ...
    def visit_FunctionDef(self, node: Any) -> None: ...

def versionToUsefulObject(version: Any): ...
def deprecatedToUsefulText(visitor: Any, name: Any, deprecated: Any): ...

class TwistedASTBuilder(zopeinterface.ZopeInterfaceASTBuilder):
    ModuleVistor: Any = ...

class TwistedSystem(zopeinterface.ZopeInterfaceSystem):
    defaultBuilder: Any = ...
    intersphinx: Any = ...
    def __init__(self, options: Optional[Any] = ...) -> None: ...
    def privacyClass(self, documentable: Any): ...
